// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int                 @id @default(autoincrement())
  username     String              @unique
  email        String              @unique
  password     String
  roles        Role?               @default(USER)
  phone_number Int?
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @default(now())
  profile      profile?
  product      products[]
  cart         transactionsItems[]
  transactions transactions[]
}

enum Role {
  ADMIN
  USER
}

model profile {
  id         Int       @id @default(autoincrement())
  address    String?
  firstName  String?
  lastName   String?
  city       String?
  birth_date DateTime?

  user_id Int  @unique
  user    user @relation(fields: [user_id], references: [id])
}

model products {
  id          Int      @id @default(autoincrement())
  productName String
  category    String
  quantity    Int
  image       String? @default("")
  price       Int
  color       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  user_id     Int?
  user        user?    @relation(fields: [user_id], references: [id])

  // images product_images[]
  cart transactionsItems[]
}

// model product_images {
//   id          Int       @id @default(autoincrement())
//   name        String
//   image_url   String    
//   products_id Int?
//   product     products? @relation(fields: [products_id], references: [id])
// }

model transactionsItems {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now())
  products_id    Int
  quantity       Int
  transactionsId Int?
  user_id        Int?
  user           user?         @relation(fields: [user_id], references: [id])
  product        products?     @relation(fields: [products_id], references: [id])
  transactions   transactions? @relation(fields: [transactionsId], references: [id])
}

model transactions {
  id           Int                 @id @default(autoincrement())
  cart_id      Int
  fullAddress  String
  recipient    String
  phone_number String
  courier      Courier             @default(JNT)
  total_price  BigInt?
  status       Status?             @default(cart)
  payment      Payment             @default(Bank_Transfer)
  cart         transactionsItems[]
  user_id      Int?
  user         user?               @relation(fields: [user_id], references: [id])
}

enum Payment {
  Bank_Transfer
}

enum Status {
  cart
  menunggu_pembayaran
}

enum Courier {
  JNT
  JNE
}
